/*
 * Generated by dtrace(1M).
 */

#ifndef	_BXPROBES_H
#define	_BXPROBES_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define BASETEN_STABILITY "___dtrace_stability$BaseTen$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0"

#define BASETEN_TYPEDEFS "___dtrace_typedefs$BaseTen$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	BASETEN_BEGIN_EXIT_PREPARATION() \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$begin_exit_preparation$v1(); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_BEGIN_EXIT_PREPARATION_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$begin_exit_preparation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_BEGIN_FETCH() \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$begin_fetch$v1(); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_BEGIN_FETCH_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$begin_fetch$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_BEGIN_SLEEP_PREPARATION() \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$begin_sleep_preparation$v1(); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_BEGIN_SLEEP_PREPARATION_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$begin_sleep_preparation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_BEGIN_WAKE_PREPARATION() \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$begin_wake_preparation$v1(); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_BEGIN_WAKE_PREPARATION_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$begin_wake_preparation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_END_EXIT_PREPARATION() \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$end_exit_preparation$v1(); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_END_EXIT_PREPARATION_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$end_exit_preparation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_END_FETCH(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$end_fetch$v1$766f6964202a$63686172202a$63686172202a$6c6f6e67(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_END_FETCH_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$end_fetch$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_END_SLEEP_PREPARATION() \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$end_sleep_preparation$v1(); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_END_SLEEP_PREPARATION_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$end_sleep_preparation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_END_WAKE_PREPARATION() \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$end_wake_preparation$v1(); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_END_WAKE_PREPARATION_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$end_wake_preparation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_SENT_COMMIT_TRANSACTION(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$sent_commit_transaction$v1$766f6964202a$6c6f6e67$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_SENT_COMMIT_TRANSACTION_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$sent_commit_transaction$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_SENT_ROLLBACK_TO_SAVEPOINT(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$sent_rollback_to_savepoint$v1$766f6964202a$6c6f6e67$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_SENT_ROLLBACK_TO_SAVEPOINT_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$sent_rollback_to_savepoint$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_SENT_ROLLBACK_TRANSACTION(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$sent_rollback_transaction$v1$766f6964202a$6c6f6e67$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_SENT_ROLLBACK_TRANSACTION_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$sent_rollback_transaction$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	BASETEN_SENT_SAVEPOINT(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " BASETEN_TYPEDEFS); \
	__dtrace_probe$BaseTen$sent_savepoint$v1$766f6964202a$6c6f6e67$63686172202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " BASETEN_STABILITY); \
} while (0)
#define	BASETEN_SENT_SAVEPOINT_ENABLED() \
	({ int _r = __dtrace_isenabled$BaseTen$sent_savepoint$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$BaseTen$begin_exit_preparation$v1(void);
extern int __dtrace_isenabled$BaseTen$begin_exit_preparation$v1(void);
extern void __dtrace_probe$BaseTen$begin_fetch$v1(void);
extern int __dtrace_isenabled$BaseTen$begin_fetch$v1(void);
extern void __dtrace_probe$BaseTen$begin_sleep_preparation$v1(void);
extern int __dtrace_isenabled$BaseTen$begin_sleep_preparation$v1(void);
extern void __dtrace_probe$BaseTen$begin_wake_preparation$v1(void);
extern int __dtrace_isenabled$BaseTen$begin_wake_preparation$v1(void);
extern void __dtrace_probe$BaseTen$end_exit_preparation$v1(void);
extern int __dtrace_isenabled$BaseTen$end_exit_preparation$v1(void);
extern void __dtrace_probe$BaseTen$end_fetch$v1$766f6964202a$63686172202a$63686172202a$6c6f6e67(const void *, const char *, const char *, long);
extern int __dtrace_isenabled$BaseTen$end_fetch$v1(void);
extern void __dtrace_probe$BaseTen$end_sleep_preparation$v1(void);
extern int __dtrace_isenabled$BaseTen$end_sleep_preparation$v1(void);
extern void __dtrace_probe$BaseTen$end_wake_preparation$v1(void);
extern int __dtrace_isenabled$BaseTen$end_wake_preparation$v1(void);
extern void __dtrace_probe$BaseTen$sent_commit_transaction$v1$766f6964202a$6c6f6e67$63686172202a(const void *, long, const char *);
extern int __dtrace_isenabled$BaseTen$sent_commit_transaction$v1(void);
extern void __dtrace_probe$BaseTen$sent_rollback_to_savepoint$v1$766f6964202a$6c6f6e67$63686172202a(const void *, long, const char *);
extern int __dtrace_isenabled$BaseTen$sent_rollback_to_savepoint$v1(void);
extern void __dtrace_probe$BaseTen$sent_rollback_transaction$v1$766f6964202a$6c6f6e67$63686172202a(const void *, long, const char *);
extern int __dtrace_isenabled$BaseTen$sent_rollback_transaction$v1(void);
extern void __dtrace_probe$BaseTen$sent_savepoint$v1$766f6964202a$6c6f6e67$63686172202a(const void *, long, const char *);
extern int __dtrace_isenabled$BaseTen$sent_savepoint$v1(void);

#else

#define	BASETEN_BEGIN_EXIT_PREPARATION() \
do { \
	} while (0)
#define	BASETEN_BEGIN_EXIT_PREPARATION_ENABLED() (0)
#define	BASETEN_BEGIN_FETCH() \
do { \
	} while (0)
#define	BASETEN_BEGIN_FETCH_ENABLED() (0)
#define	BASETEN_BEGIN_SLEEP_PREPARATION() \
do { \
	} while (0)
#define	BASETEN_BEGIN_SLEEP_PREPARATION_ENABLED() (0)
#define	BASETEN_BEGIN_WAKE_PREPARATION() \
do { \
	} while (0)
#define	BASETEN_BEGIN_WAKE_PREPARATION_ENABLED() (0)
#define	BASETEN_END_EXIT_PREPARATION() \
do { \
	} while (0)
#define	BASETEN_END_EXIT_PREPARATION_ENABLED() (0)
#define	BASETEN_END_FETCH(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	BASETEN_END_FETCH_ENABLED() (0)
#define	BASETEN_END_SLEEP_PREPARATION() \
do { \
	} while (0)
#define	BASETEN_END_SLEEP_PREPARATION_ENABLED() (0)
#define	BASETEN_END_WAKE_PREPARATION() \
do { \
	} while (0)
#define	BASETEN_END_WAKE_PREPARATION_ENABLED() (0)
#define	BASETEN_SENT_COMMIT_TRANSACTION(arg0, arg1, arg2) \
do { \
	} while (0)
#define	BASETEN_SENT_COMMIT_TRANSACTION_ENABLED() (0)
#define	BASETEN_SENT_ROLLBACK_TO_SAVEPOINT(arg0, arg1, arg2) \
do { \
	} while (0)
#define	BASETEN_SENT_ROLLBACK_TO_SAVEPOINT_ENABLED() (0)
#define	BASETEN_SENT_ROLLBACK_TRANSACTION(arg0, arg1, arg2) \
do { \
	} while (0)
#define	BASETEN_SENT_ROLLBACK_TRANSACTION_ENABLED() (0)
#define	BASETEN_SENT_SAVEPOINT(arg0, arg1, arg2) \
do { \
	} while (0)
#define	BASETEN_SENT_SAVEPOINT_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _BXPROBES_H */

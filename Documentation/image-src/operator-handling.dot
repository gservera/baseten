digraph G
{
	rankdir = "LR";
	{
		node []		
		start2 [label = "Equality"]
		end2 [label = "End"]
		
		start1 [label = "Lt, gt, lte, gte,\nbetween"]
		end1 [label = "End"]
		
		start3 [label = "Contains"]
		end3 [label = "End"]
		
		start4 [label = "In"]
		end4 [label = "End"]
		
		start5 [label = "Begins, ends, like,\nmatches, (in)"]
		end5 [label = "End"]
		
		start6 [label = "Custom selector"]
		end6 [label = "End"]
	}
	{
		node [shape = box]
		P1 [label = "Add collect all\nto stack"]
		P2 [label = "Add the operation\nto stack"]

		P3 [label = "Add collect all\nto stack"]
		P4 [label = "Add the operation\nto stack"]
		
		P5 [label = "Handle like ”equals” with ANY qualifier"]
		
		P6 [label = "Swap lval and rval"]
		P7 [label = "Handle as a string operation"]
		P8 [label = "Handle like equals with ANY qualifier"]
		P9 [label = "Add collect all\nto stack"]
		
		P10 [label = "Escape [%\\_] in rval,\nprepend or append % for begins, ends, in"]
		P11 [label = "Add the operation\nto stack"]
		P13 [label = "Add collect all\nto stack"]
		
		P12 [label = "Add collect all\nto stack"]
	}
	{
		node [shape = diamond]
		D1 [label = "Is there an ANY or\nALL qualifier?"]
		D2 [label = "Are lval and rval\nboth scalars?"]
		D3 [label = "Is lval a collection\nand rval a scalar?"]		
		
		D4 [label = "Is there an ANY or\nALL qualifier?"]
		D5 [label = "Is lval a collection\nand rval a scalar?"]		
		D6 [label = "Are lval and rval\nof the same type?"]
		
		D7 [label = "Is rval a scalar?"]
		D8 [label = "Is lval a scalar?"]
		
		D9 [label = "Is rval a scalar?"]
		D10 [label = "Is there an ANY or\nALL qualifier?"]
		D11 [label = "Is lval a scalar?"]
		D12 [label = "Is lval a collection?"]
	}
	
	start2 -> D4
	D4 -> D5 [label=y]
	D4 -> D6 [label=n]
	D5 -> P4 [label=y]
	D5 -> P3 [label=n]
	D6 -> P4 [label=y]
	D6 -> P3 [label=n]
	P3 -> end2
	P4 -> end2
	
	start1 -> D1
	D1 -> D3 [label=y]
	D1 -> D2 [label=n]
	D2 -> P2 [label=y]
	D2 -> P1 [label=n]
	D3 -> P2 [label=y]
	D3 -> P1 [label=n]
	P1 -> end1
	P2 -> end1
	
	start3 -> P5 -> end3
	
	start4 -> P6
	P6 -> D7
	D7 -> D8 [label=y]
	D7 -> P9 [label=n]
	D8 -> P7 [label=y]
	D8 -> P8 [label=n]
	P7 -> end4
	P8 -> end4
	P9 -> end4
		
	start5 -> D9
	D9 -> P10 [label=y]
	D9 -> P13 [label=n]
	P10 -> D10
	D10 -> D12 [label=y]
	D10 -> D11 [label=n]
	D11 -> P11 [label=y]
	D11 -> P13 [label=n]
	D12 -> P11 [label=y]
	D12 -> P13 [label=n]
	P11 -> end5
	P13 -> end5
	
	start6 -> P12 -> end6
}
